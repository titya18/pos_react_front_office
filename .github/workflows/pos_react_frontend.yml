name: Deploy Frontend to VPS

on:
  push:
    branches:
      - main  # Deploy when code is pushed to 'main'
  pull_request:
    branches:
      - main  # Deploy when a PR is merged into 'main'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure the full repo is cloned

      # Step 2: Debug - Check files in workspace
      - name: Debug - List files in workspace
        run: |
          echo "Listing files in GitHub Actions workspace..."
          ls -la $GITHUB_WORKSPACE

      # Step 3: Set up SSH for deployment
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

      # Step 4: Clone frontend files from GitHub (or pull latest changes)d
      - name: Clone frontend files from GitHub
        run: |
          echo "Cloning or pulling frontend repository..."
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@${{ secrets.SERVER_IP }} << 'EOF'
            cd /var/www
            if [ -d "pos_react_front_office" ]; then
              cd pos_react_front_office
              git fetch --all  # Fetch all branches
              git reset --hard origin/main  # Discard local changes and force sync with remote
            else
              git clone https://github.com/${{ secrets.GITHUB_USER }}/pos_react_front_office.git  # Clone if the directory doesn't exist
            fi
          EOF

      # Step 5: SSH into VPS and restart frontend only
      - name: Deploy frontend to VPS
        run: |
          echo "Rebuilding and restarting frontend on VPS..."
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@${{ secrets.SERVER_IP }} << 'EOF'
            cd /var/www/pos_react_front_office
            docker-compose build --no-cache frontend  # Rebuild frontend without cache
            docker-compose logs frontend  # Output logs to debug any issues during build
            docker container restart pos_frontend  # Restart only the frontend container
          EOF
